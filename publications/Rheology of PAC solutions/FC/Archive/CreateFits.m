%CREATEFITS(UP_SR,UP_AV_M)
%  Create fits.
%
%  Data for 'Elis' fit:
%      X Input : Up_SR
%      Y Output: Up_AV_M
%  Data for 'Power-law' fit:
%      X Input : Up_SR
%      Y Output: Up_AV_M
%  Data for 'Cross' fit:
%      X Input : Up_SR
%      Y Output: Up_AV_M
%  Data for 'Carreau' fit:
%      X Input : Up_SR
%      Y Output: Up_AV_M
%  Output:
%      fitresult : a cell-array of fit objects representing the fits.
%      gof : structure array with goodness-of fit info.
%
%  See also FIT, CFIT, SFIT.

%  Auto-generated by MATLAB on 08-Dec-2015 16:11:05

%% Initialization.

% Initialize arrays to store fits and goodness-of-fit.
fitresult = cell( 4, 1 );
gof = struct( 'sse', cell( 4, 1 ), ...
    'rsquare', [], 'dfe', [], 'adjrsquare', [], 'rmse', [] );

%% Fit: 'Elis'.
[xData, yData] = prepareCurveData( Up_SR, Up_AV_M );

% Set up fittype and options.
ft = fittype( 'ny_0+K*x^(n-1)', 'independent', 'x', 'dependent', 'y' );
opts = fitoptions( 'Method', 'NonlinearLeastSquares' );
opts.Display = 'Off';
opts.Lower = [0 0 0];
opts.StartPoint = [0.8002804688888 0.1419 0.421761282626275];
opts.Upper = [1 1 1];

% Fit model to data.
[fitresult{1}, gof(1)] = fit( xData, yData, ft, opts );

% Plot fit with data.
figure( 'Name', 'Elis' );
h = plot( fitresult{1}, xData, yData );
legend( h, 'Up_AV_M vs. Up_SR', 'Elis', 'Location', 'NorthEast' );
% Label axes
xlabel Up_SR
ylabel Up_AV_M
grid on

%% Fit: 'Power-law'.
[xData, yData] = prepareCurveData( Up_SR, Up_AV_M );

% Set up fittype and options.
ft = fittype( 'K*x^(n-1)', 'independent', 'x', 'dependent', 'y' );
opts = fitoptions( 'Method', 'NonlinearLeastSquares' );
opts.Display = 'Off';
opts.Lower = [0 0];
opts.StartPoint = [0.0357116785741896 0.849129305868777];
opts.Upper = [1 1];

% Fit model to data.
[fitresult{2}, gof(2)] = fit( xData, yData, ft, opts );

% Plot fit with data.
figure( 'Name', 'Power-law' );
h = plot( fitresult{2}, xData, yData );
legend( h, 'Up_AV_M vs. Up_SR', 'Power-law', 'Location', 'NorthEast' );
% Label axes
xlabel Up_SR
ylabel Up_AV_M
grid on

%% Fit: 'Cross'.
[xData, yData] = prepareCurveData( Up_SR, Up_AV_M );

% Set up fittype and options.
ft = fittype( 'ny_0/(1+(K*x)^n)', 'independent', 'x', 'dependent', 'y' );
opts = fitoptions( 'Method', 'NonlinearLeastSquares' );
opts.Display = 'Off';
opts.Lower = [0 0 0];
opts.StartPoint = [0.694828622975817 0.317099480060861 0.950222048838355];

% Fit model to data.
[fitresult{3}, gof(3)] = fit( xData, yData, ft, opts );

% Plot fit with data.
figure( 'Name', 'Cross' );
h = plot( fitresult{3}, xData, yData );
legend( h, 'Up_AV_M vs. Up_SR', 'Cross', 'Location', 'NorthEast' );
% Label axes
xlabel Up_SR
ylabel Up_AV_M
grid on

%% Fit: 'Carreau'.
[xData, yData] = prepareCurveData( Up_SR, Up_AV_M );

% Set up fittype and options.
ft = fittype( 'ny_0/(((1+(K*x)^a)^((1-n)/a)))', 'independent', 'x', 'dependent', 'y' );
opts = fitoptions( 'Method', 'NonlinearLeastSquares' );
opts.Display = 'Off';
opts.Lower = [0 -Inf 0 -Inf];
opts.StartPoint = [0.646313010111265 0.949962561457829 0.709364830858073 0.754686681982361];
opts.Upper = [1 Inf 1 Inf];

% Fit model to data.
[fitresult{4}, gof(4)] = fit( xData, yData, ft, opts );

% Plot fit with data.
figure( 'Name', 'Carreau' );
h = plot( fitresult{4}, xData, yData );
legend( h, 'Up_AV_M vs. Up_SR', 'Carreau', 'Location', 'NorthEast' );
% Label axes
xlabel Up_SR
ylabel Up_AV_M
grid on


