function [fitresult, gof] = createFit_PowerLaw_NormalStressCoefficient(x, y, type)
%createFit_PowerLaw_NormalStressCoefficient(SR,NCOEFF1)
%  Create a fit.
%
%  Data for 'Power-Law2 - Normal Stress Coefficient' fit:
%      X Input : SR
%      Y Output: NCoeff1
%  Output:
%      fitresult : a fit object representing the fit.
%      gof : structure with goodness-of fit info.
%
%  See also FIT, CFIT, SFIT.

%  Auto-generated by MATLAB on 05-Apr-2017 10:41:18


%% Fit: 'Power-Law - Normal Stress Coefficient'.
[xData, yData] = prepareCurveData( x, y );

% Set up fittype and options.
if strcmp(type,'First order')
    ft = fittype( 'K*x^(n-1)', 'independent', 'x', 'dependent', 'y' );
else
    ft = fittype( 'K*x^(n-2)', 'independent', 'x', 'dependent', 'y' );
end
opts = fitoptions( 'Method', 'NonlinearLeastSquares' );
opts.Display = 'Off';
opts.Lower = [0 0];
opts.Robust = 'LAR';
opts.StartPoint = [0.1712 0.706046088019609];
opts.Upper = [1 2];

% Fit model to data.
[fitresult, gof] = fit( xData, yData, ft, opts );


% Plot fit with data.
figure( 'Name', 'Fit' );
h = plot( fitresult, xData, yData );
legend( h, 'Data', 'Fit', 'Location', 'NorthEast' );
% Label axes
xlabel 'x'
ylabel 'y'
grid on
set(gca,...
    'XScale','log',...
    'YScale','log');

